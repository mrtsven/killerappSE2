{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/subpages/home.ts","src/subpages/login.ts","src/subpages/subpage.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Router, RouterConfiguration } from 'aurelia-router'\nimport { autoinject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-fetch-client';\n\n@autoinject\r\nexport class App {\r\n    router: Router;\r\n    constructor(private http: HttpClient) {\n        this.configHttp();\n    }\n\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n        config.title = 'Aurelia';\r\n        config.map([\n            \r\n            { route: ['/', 'subpage'], name: 'subpage', moduleId: 'subpages/subpage' },\n            { route: ['/', 'home'], name: 'home', moduleId: 'subpages/home' },\r\n        ]);\r\n    }\n\n    configHttp(): void {\n        this.http.configure(config => {\n            config\n                .withBaseUrl('api/')\n                .withDefaults({\n                    method: \"POST\",\n                    credentials: 'same-origin',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-Requested-With': 'Fetch'\n                    }\n                })\n                .withInterceptor({\n                    request(request) {\n                        console.log(`Requesting ${request.method} ${request.url}`);\n                        return request;\n                    },\n                    response(response: Response) {\n                        console.log(`Received ${response.status} ${response.url}`);\n                        return response;\n                    }\n                });\n        });\n    }\n\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { autoinject } from \"aurelia-framework\";\nimport { HttpClient, json } from \"aurelia-fetch-client\";\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\n\nclass Character {\n    id: number;\n    name: string;\n     lvl: number;\n     xp: number;\n     healthPoints: number;\n     stamina: number;\n     strength: number;\n     charisma: number;\n     intelligence: number;\r\n}\n\nclass Class {\n    id: number;\n    name: string;\n    type: string;\n    base_defence: number;\n    base_attack: number;\n    about: string;\r\n}\n\nclass Race {\n    id: number;\n    faction: string;\n    race: string;\n    about: string;\r\n}\n\r\n@autoinject\nexport class home {\n    name;\n    charclass;\n    races;\n\n    selectedRace: number;\n    selectedClass: number;\n\n    constructor(private http: HttpClient, private event: EventAggregator, private router: Router) {\r\n        this.getRaces();\n        this.getClasses();\r\n    }\n\n    createCharacter() {\n        console.log(this.selectedRace);\n        this.http.fetch('character/create', {\n            body: json(new create(this.name, this.selectedRace, this.selectedClass))\n        });\n\r\n    }\n\n    getRaces() {\r\n        this.http.fetch('character/getrace', {\r\n            \r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.races = data;\r\n                console.log(data);\r\n            });\r\n    }\n\n    getClasses() {\r\n        this.http.fetch('character/getclass', {\r\n        \r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.charclass = data;\r\n                console.log(data);\r\n            });\r\n    }\r\n}\n\nexport class create {\n    name: string;\n    race: number;\n    charclass: number;\n    constructor(name, race, charclass) {\n        this.charclass = charclass;\n        this.race = race;\n        this.name = name;\r\n    }\r\n}","import { autoinject } from \"aurelia-framework\";\nimport { HttpClient, json } from \"aurelia-fetch-client\";\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\n\n@autoinject\nexport class login {\n    constructor(private http: HttpClient, private event: EventAggregator, private router: Router) {\n\r\n    }\n\r\n}","\nimport { autoinject } from \"aurelia-framework\";\nimport { HttpClient, json } from \"aurelia-fetch-client\";\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\n\r\n@autoinject\nexport class subpage {\n    npcs;\n    constructor(private http: HttpClient, private event: EventAggregator, private router: Router) {\r\n        this.getNpcs();\r\n    }\n\n    getNpcs() {\r\n        this.http.fetch('character/getNpcs', {\r\n            body: json(this.npcs)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.npcs = data;\r\n                console.log(data);\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":"../.."}